{"version":3,"sources":["../../../server/src/components/Results.js"],"names":["Results","state","results","searchTerm","article","saveArticle","info","console","log","postArticle","props","runQuery","then","data","setState","map","item","_id","web_url","headline","main","pub_date"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;IAEMA,O;;;;;;;;;;;;;;wLAEJC,K,GAAQ;AACNC,eAAS,EADH;AAENC,kBAAY,EAFN;AAGNC,eAAS;AAHH,K,QAqCRC,W,GAAc,UAACC,IAAD,EAAQ;AACpBC,cAAQC,GAAR,CAAYF,IAAZ;AACA,wBAAQG,WAAR,CAAoBH,IAApB;AACD,K;;;;;;;AAlCD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;wCACoB;AAAA;;AAClB;AACEC,cAAQC,GAAR,CAAY,SAAZ;AACAD,cAAQC,GAAR,CAAY,KAAKE,KAAL,CAAWP,UAAvB;;AAEA;;;AAGA;AACA,wBAAQQ,QAAR,CAAiB,KAAKD,KAAL,CAAWP,UAA5B,EAAwCS,IAAxC,CAA6C,UAACC,IAAD,EAAU;AACrD,YAAIA,SAAS,OAAKZ,KAAL,CAAWC,OAAxB,EAAiC;AAC/B,iBAAKY,QAAL,CAAc,EAACZ,SAASW,IAAV,EAAd;AACAN,kBAAQC,GAAR,CAAY,UAAZ;AACAD,kBAAQC,GAAR,CAAY,OAAKP,KAAL,CAAWC,OAAvB;AACD;AACF;AACH;AAPE;AAQH;;AAED;;;;6BAMS;AAAA;;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEA;AAAA;AAAA,YAAI,WAAU,YAAd;AACG,eAAKD,KAAL,CAAWC,OAAX,CAAmBa,GAAnB,CAAuB;AAAA,mBACtB;AAAA;AAAA,gBAAI,KAAKC,KAAKC,GAAd,EAAmB,WAAU,iBAA7B;AACGD,mBAAKE,OADR;AAEE,uDAFF;AAGGF,mBAAKG,QAAL,CAAcC,IAHjB;AAIE;AAAA;AAAA;AACE,6BAAU,iBADZ;AAEE,wBAAK,QAFP;AAGE,2BAAS,mBAAM;AAAC,2BAAKf,WAAL,CAAiBW,IAAjB;AAAuB;AAHzC;AAAA;AAAA,eAJF;AAWE,uDAXF;AAYGA,mBAAKK;AAZR,aADsB;AAAA,WAAvB;AADH;AAFA,OADF;AAuBD;;;;;;kBAKYrB,O","file":"Results.js","sourcesContent":["import React, {Component} from 'react';\n\nimport helpers from '../utils/helpers';\n\nclass Results extends Component {\n\n  state = {\n    results: [],\n    searchTerm: {},\n    article: {}\n  };\n\n  // componentDidUpdate() {\n  //   helpers.postArticle(this.state.article)\n  //     .then(() => {\n  //     console.log(\"posted to mongo\");\n  //   })\n  // }\n\n  // Whenever the button is clicked we'll use setState to add to the clickCounter\n  // Note the syntax for setting the state\n\n  // If the component changes (i.e. if a search is entered)...\n  componentDidMount() {\n    //if (prevState.searchTerm !== this.state.searchTerm) {\n      console.log('Updated');\n      console.log(this.props.searchTerm);\n\n      //var {topic, startYear, endYear} = this.props.searchTerm;\n\n\n      // Run query for the article\n      helpers.runQuery(this.props.searchTerm).then((data) => {\n        if (data !== this.state.results) {\n          this.setState({results: data});\n          console.log('Articles');\n          console.log(this.state.results);\n        }\n      })\n    //}\n  }\n\n  // save articles\n  saveArticle = (info)=>{\n    console.log(info);\n    helpers.postArticle(info);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Search Results</h2>\n      <ul className=\"list-group\">\n        {this.state.results.map(item => (\n          <li key={item._id} className=\"list-group-item\">\n            {item.web_url}\n            <hr/>\n            {item.headline.main}\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => {this.saveArticle(item)}}\n            >\n              Save\n            </button>\n            <hr/>\n            {item.pub_date}\n          </li>\n        ))}\n      </ul>\n      </div>\n    );\n  };\n\n}\n\n\nexport default Results;"]}